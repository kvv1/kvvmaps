/* Generated By:JavaCC: Do not edit this line. EG1Constants.java */
package kvv.evlang;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EG1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int OR = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int NEQ = 10;
  /** RegularExpression Id. */
  int LT = 11;
  /** RegularExpression Id. */
  int LE = 12;
  /** RegularExpression Id. */
  int GT = 13;
  /** RegularExpression Id. */
  int GE = 14;
  /** RegularExpression Id. */
  int NOT = 15;
  /** RegularExpression Id. */
  int PLUS = 16;
  /** RegularExpression Id. */
  int MINUS = 17;
  /** RegularExpression Id. */
  int MULTIPLY = 18;
  /** RegularExpression Id. */
  int DIVIDE = 19;
  /** RegularExpression Id. */
  int EEPROM = 20;
  /** RegularExpression Id. */
  int REG = 21;
  /** RegularExpression Id. */
  int EEREG = 22;
  /** RegularExpression Id. */
  int TIMER = 23;
  /** RegularExpression Id. */
  int CONST = 24;
  /** RegularExpression Id. */
  int IF = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int PRINT = 27;
  /** RegularExpression Id. */
  int DEC = 28;
  /** RegularExpression Id. */
  int INC = 29;
  /** RegularExpression Id. */
  int MULDIV = 30;
  /** RegularExpression Id. */
  int CHECKBOX = 31;
  /** RegularExpression Id. */
  int TEXT = 32;
  /** RegularExpression Id. */
  int INT = 33;
  /** RegularExpression Id. */
  int VOID = 34;
  /** RegularExpression Id. */
  int RETURN = 35;
  /** RegularExpression Id. */
  int TRY = 36;
  /** RegularExpression Id. */
  int CATCH = 37;
  /** RegularExpression Id. */
  int THROW = 38;
  /** RegularExpression Id. */
  int STRUCT = 39;
  /** RegularExpression Id. */
  int NULL = 40;
  /** RegularExpression Id. */
  int NEW = 41;
  /** RegularExpression Id. */
  int XTIMER = 42;
  /** RegularExpression Id. */
  int TRAP = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int STRING = 45;
  /** RegularExpression Id. */
  int NUMBER = 46;
  /** RegularExpression Id. */
  int DIGIT = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"!\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"eeprom\"",
    "\"reg\"",
    "\"eereg\"",
    "\"timer\"",
    "\"const\"",
    "\"if\"",
    "\"else\"",
    "\"print\"",
    "\"--\"",
    "\"++\"",
    "\"muldiv\"",
    "\"checkbox\"",
    "\"text\"",
    "\"int\"",
    "\"void\"",
    "\"return\"",
    "\"try\"",
    "\"catch\"",
    "\"throw\"",
    "\"struct\"",
    "\"null\"",
    "\"new\"",
    "\"xtimer\"",
    "\"trap\"",
    "<ID>",
    "<STRING>",
    "<NUMBER>",
    "<DIGIT>",
    "\":\"",
    "\"{\"",
    "\";\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"=\"",
    "\".\"",
  };

}
